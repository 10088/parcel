const {Bundler} = require('@parcel/plugin');

let timesBundled = 0;
// Dumb bundler, taken from the cache example.
// will add the times bundled to each asset in the meta
module.exports = new Bundler({
  async bundle({bundleGraph}) {
    timesBundled++;

    bundleGraph.traverse((node, context) => {
      if (node.type !== 'dependency') {
        return context;
      }

      let dependency = node.value;
      let assets = bundleGraph.getDependencyAssets(dependency);
      let bundleGroup = bundleGraph.createBundleGroup(dependency, dependency.target || context.target);

      for (let asset of assets) {
        let bundle = bundleGraph.createBundle({
          entryAsset: asset,
          isEntry: Boolean(dependency.isEntry),
          target: bundleGroup.target,
        });

        asset.meta['timesBundled'] = timesBundled;
        bundleGraph.addAssetGraphToBundle(asset, bundle);
        bundleGraph.addBundleToBundleGroup(bundle, bundleGroup);
      }

      return {
        target: dependency.target || context.target,
      };
    });
  },
  optimize() {}
});
